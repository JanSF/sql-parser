#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 362)

def self.parse(sql)
  new.scan_str(sql)
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    79,   121,   252,   130,   108,   108,    31,   257,    14,   107,
   107,   263,   161,   140,   141,   129,   264,    38,    79,   119,
   120,    32,   117,    34,    35,   257,    36,    37,   177,   178,
   226,    22,   128,   122,    40,    53,   172,    40,    79,    53,
    53,   145,    40,    82,    83,    63,    67,    80,    71,    73,
    74,    75,    76,    53,    84,   144,    88,    89,    90,    91,
    23,    82,    83,    24,    67,    80,    71,    73,    74,    75,
    76,    79,    84,    53,    88,    89,    90,    91,    63,    82,
    83,    82,    83,   127,    67,    80,    71,    73,    74,    75,
    76,    79,    84,   126,    88,    89,    90,    91,    63,   136,
   135,  -139,    41,    42,   168,   173,    53,   -95,   179,    79,
   180,   182,   183,   116,    82,    83,    63,    67,    80,    71,
    73,    74,    75,    76,   187,    84,    53,    88,    89,    90,
    91,  -139,  -139,  -139,    82,    83,   115,    67,    80,    71,
    73,    74,    75,    76,    53,    84,   255,    88,    89,    90,
    91,   208,    82,    83,   209,    67,    80,    71,    73,    74,
    75,    76,    79,    84,   210,    88,    89,    90,    91,    63,
     7,     8,     9,    10,   211,   162,   212,   213,    31,   254,
    79,   256,   214,   216,   102,   218,   219,    63,   221,    13,
   222,    22,    14,    32,   226,    34,    35,    53,    36,    37,
    79,    22,   238,   241,    22,    82,    83,    63,    67,    80,
    71,    73,    74,    75,    76,    53,    84,   226,    88,    89,
    90,    91,    40,    82,    83,    40,    67,    80,    71,    73,
    74,    75,    76,    79,    84,    53,    88,    89,    90,    91,
    63,    97,    53,    82,    83,   251,    67,    80,    71,    73,
    74,    75,    76,    79,    84,    96,    88,    89,    90,    91,
    63,   159,    95,    94,    93,   259,    22,    22,    53,    46,
    45,    79,    43,    14,   272,   273,    82,    83,    63,    67,
    80,    71,    73,    74,    75,    76,   226,    84,    53,    88,
    89,    90,    91,   274,   241,    30,    82,    83,   259,    67,
    80,    71,    73,    74,    75,    76,    53,    84,    29,    88,
    89,    90,    91,    27,    82,    83,   278,    67,    80,    71,
    73,    74,    75,    76,    79,    84,    31,    88,    89,    90,
    91,   257,    26,   280,    40,    31,    53,   283,   285,    22,
   137,    32,    79,    34,    35,    22,    36,    37,   142,    63,
    32,   112,    34,    35,    14,    36,    37,   149,   151,    53,
    22,   134,    79,    40,   133,   132,  -159,    82,    83,   257,
    67,    80,    71,    73,    74,    75,    76,    53,    84,   131,
    88,    89,    90,    91,   159,    82,    83,    15,    67,    80,
    71,    73,    74,    75,    76,    79,    84,    53,    88,    89,
    90,    91,    63,   nil,   nil,    82,    83,    14,    67,    80,
    71,    73,    74,    75,    76,    79,    84,   nil,    88,    89,
    90,    91,   257,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,    83,
   nil,    67,    80,    71,    73,    74,    75,    76,    79,    84,
    53,    88,    89,    90,    91,   188,   nil,   nil,    82,    83,
   nil,    67,    80,    71,    73,    74,    75,    76,    79,    84,
   nil,    88,    89,    90,    91,   257,   195,   nil,   nil,   nil,
   nil,   nil,   192,    53,   nil,   nil,    79,   nil,   nil,   nil,
   nil,    82,    83,   257,    67,    80,    71,    73,    74,    75,
    76,   nil,    84,    53,    88,    89,    90,    91,   nil,   nil,
   nil,    82,    83,   nil,    67,    80,    71,    73,    74,    75,
    76,    53,    84,   nil,    88,    89,    90,    91,   nil,    82,
    83,   nil,    67,    80,    71,    73,    74,    75,    76,    79,
    84,    31,    88,    89,    90,    91,   257,   nil,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    32,    79,    34,    35,
   nil,    36,    37,    32,    63,    34,    35,   nil,    36,    37,
   nil,   nil,   nil,   nil,    53,   nil,   nil,    79,   nil,   nil,
   nil,   nil,    82,    83,   257,    67,    80,    71,    73,    74,
    75,    76,    53,    84,   nil,    88,    89,    90,    91,   nil,
    82,    83,   nil,    67,    80,    71,    73,    74,    75,    76,
    79,    84,    53,    88,    89,    90,    91,   257,   nil,   nil,
    82,    83,   nil,    67,    80,    71,    73,    74,    75,    76,
    79,    84,   nil,    88,    89,    90,    91,    63,   nil,   nil,
   nil,   nil,   nil,    49,   nil,    53,   nil,   nil,    79,   nil,
   nil,   nil,   nil,    82,    83,   257,    67,    80,    71,    73,
    74,    75,    76,   nil,    84,    53,    88,    89,    90,    91,
   nil,   nil,   nil,    82,    83,   nil,    67,    80,    71,    73,
    74,    75,    76,    53,    84,   nil,    88,    89,    90,    91,
   nil,    82,    83,   nil,    67,    80,    71,    73,    74,    75,
    76,    79,    84,    31,    88,    89,    90,    91,   257,   111,
   nil,   nil,   nil,   112,   nil,   nil,   nil,   nil,    32,   nil,
    34,    35,   nil,    36,    37,   nil,   nil,   nil,    79,   nil,
   nil,   nil,   nil,   nil,   nil,   188,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    82,    83,   nil,    67,    80,    71,
    73,    74,    75,    76,   nil,    84,   195,    88,    89,    90,
    91,    79,   192,    53,   nil,   nil,   nil,   nil,   188,   nil,
   nil,    82,    83,   nil,    67,    80,    71,    73,    74,    75,
    76,    79,    84,   nil,    88,    89,    90,    91,    63,   195,
   nil,   nil,   nil,   nil,   nil,   192,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    82,    83,   nil,    67,    80,    71,
    73,    74,    75,    76,    79,    84,    53,    88,    89,    90,
    91,   188,   nil,   nil,    82,    83,   nil,    67,    80,    71,
    73,    74,    75,    76,   nil,    84,   nil,    88,    89,    90,
    91,   nil,   nil,   nil,   nil,   nil,   nil,    79,   192,    53,
   nil,   nil,   nil,   nil,   188,   nil,   nil,    82,    83,    14,
    67,    80,    71,    73,    74,    75,    76,    79,    84,   nil,
    88,    89,    90,    91,    63,   195,   nil,   nil,   nil,   nil,
   nil,   192,    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    82,    83,   nil,    67,    80,    71,    73,    74,    75,    76,
    79,    84,    53,    88,    89,    90,    91,   188,   nil,   nil,
    82,    83,   nil,    67,    80,    71,    73,    74,    75,    76,
   nil,    84,   nil,    88,    89,    90,    91,   nil,   195,   nil,
   nil,   nil,    79,   nil,   192,    53,   nil,   nil,   nil,   188,
   nil,   nil,   nil,    82,    83,   nil,    67,    80,    71,    73,
    74,    75,    76,   nil,    84,   nil,    88,    89,    90,    91,
   195,    79,   nil,   nil,   nil,   nil,   192,    53,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    82,    83,   nil,    67,    80,
    71,    73,    74,    75,    76,   nil,    84,    79,    88,    89,
    90,    91,   nil,   nil,    63,   nil,    53,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    82,    83,   nil,    67,    80,    71,
    73,    74,    75,    76,    79,    84,   nil,    88,    89,    90,
    91,    63,    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    67,    80,    71,    73,    74,    75,    76,
   nil,    84,   229,    88,    89,    90,    91,   nil,   nil,    53,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,    83,   nil,
    67,    80,    71,    73,    74,    75,    76,   nil,    84,   nil,
    88,    89,    90,    91,   227,   228,   nil,   230,   231,   nil,
   nil,   nil,   nil,   232,   233,   234,   235,   236,   237 ]

racc_action_check = [
   234,    57,   224,    75,   142,    46,   139,   234,     3,   142,
    46,   231,   126,   102,   102,    74,   231,    18,   283,    56,
    56,   139,    52,   139,   139,   283,   139,   139,   139,   139,
   224,     3,    73,    57,   126,   234,   134,    18,   131,   142,
    46,   105,    52,   234,   234,   131,   234,   234,   234,   234,
   234,   234,   234,   283,   234,   105,   234,   234,   234,   234,
    10,   283,   283,    10,   283,   283,   283,   283,   283,   283,
   283,   130,   283,   131,   283,   283,   283,   283,   130,   134,
   134,   131,   131,    71,   131,   131,   131,   131,   131,   131,
   131,   129,   131,    68,   131,   131,   131,   131,   129,    84,
    84,    55,    23,    23,   132,   135,   130,    53,   140,   128,
   141,   147,   148,    51,   130,   130,   128,   130,   130,   130,
   130,   130,   130,   130,   150,   130,   129,   130,   130,   130,
   130,    55,    55,    55,   129,   129,    48,   129,   129,   129,
   129,   129,   129,   129,   128,   129,   227,   129,   129,   129,
   129,   162,   128,   128,   163,   128,   128,   128,   128,   128,
   128,   128,   127,   128,   164,   128,   128,   128,   128,   127,
     0,     0,     0,     0,   165,   127,   166,   167,   101,   227,
   122,   227,   171,   178,    45,   184,   185,   122,   186,     0,
   187,    43,     0,   101,   189,   101,   101,   127,   101,   101,
   121,    42,   192,   193,    41,   127,   127,   121,   127,   127,
   127,   127,   127,   127,   127,   122,   127,   215,   127,   127,
   127,   127,   216,   122,   122,    38,   122,   122,   122,   122,
   122,   122,   122,   120,   122,   121,   122,   122,   122,   122,
   120,    37,   222,   121,   121,   223,   121,   121,   121,   121,
   121,   121,   121,   119,   121,    36,   121,   121,   121,   121,
   119,   225,    35,    33,    32,   229,    31,    27,   120,    26,
    25,   116,    24,   238,   243,   244,   120,   120,   116,   120,
   120,   120,   120,   120,   120,   120,   247,   120,   119,   120,
   120,   120,   120,   248,   253,    15,   119,   119,   255,   119,
   119,   119,   119,   119,   119,   119,   116,   119,    14,   119,
   119,   119,   119,    13,   116,   116,   258,   116,   116,   116,
   116,   116,   116,   116,   278,   116,   152,   116,   116,   116,
   116,   278,    11,   263,   273,    99,   274,   275,   279,    93,
    88,   152,   259,   152,   152,    94,   152,   152,   103,   259,
    99,   110,    99,    99,   259,    99,    99,   112,   114,   278,
   115,    81,   256,   117,    80,    79,    77,   278,   278,   256,
   278,   278,   278,   278,   278,   278,   278,   259,   278,    76,
   278,   278,   278,   278,   125,   259,   259,     1,   259,   259,
   259,   259,   259,   259,   259,   257,   259,   256,   259,   259,
   259,   259,   257,   nil,   nil,   256,   256,   257,   256,   256,
   256,   256,   256,   256,   256,   254,   256,   nil,   256,   256,
   256,   256,   254,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   257,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   257,   257,
   nil,   257,   257,   257,   257,   257,   257,   257,   241,   257,
   254,   257,   257,   257,   257,   241,   nil,   nil,   254,   254,
   nil,   254,   254,   254,   254,   254,   254,   254,   237,   254,
   nil,   254,   254,   254,   254,   237,   241,   nil,   nil,   nil,
   nil,   nil,   241,   241,   nil,   nil,   236,   nil,   nil,   nil,
   nil,   241,   241,   236,   241,   241,   241,   241,   241,   241,
   241,   nil,   241,   237,   241,   241,   241,   241,   nil,   nil,
   nil,   237,   237,   nil,   237,   237,   237,   237,   237,   237,
   237,   236,   237,   nil,   237,   237,   237,   237,   nil,   236,
   236,   nil,   236,   236,   236,   236,   236,   236,   236,   235,
   236,   100,   236,   236,   236,   236,   235,   nil,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   100,   111,   100,   100,
   nil,   100,   100,    17,   111,    17,    17,   nil,    17,    17,
   nil,   nil,   nil,   nil,   235,   nil,   nil,   233,   nil,   nil,
   nil,   nil,   235,   235,   233,   235,   235,   235,   235,   235,
   235,   235,   111,   235,   nil,   235,   235,   235,   235,   nil,
   111,   111,   nil,   111,   111,   111,   111,   111,   111,   111,
   232,   111,   233,   111,   111,   111,   111,   232,   nil,   nil,
   233,   233,   nil,   233,   233,   233,   233,   233,   233,   233,
    28,   233,   nil,   233,   233,   233,   233,    28,   nil,   nil,
   nil,   nil,   nil,    28,   nil,   232,   nil,   nil,   230,   nil,
   nil,   nil,   nil,   232,   232,   230,   232,   232,   232,   232,
   232,   232,   232,   nil,   232,    28,   232,   232,   232,   232,
   nil,   nil,   nil,    28,    28,   nil,    28,    28,    28,    28,
    28,    28,    28,   230,    28,   nil,    28,    28,    28,    28,
   nil,   230,   230,   nil,   230,   230,   230,   230,   230,   230,
   230,   228,   230,    47,   230,   230,   230,   230,   228,    47,
   nil,   nil,   nil,    47,   nil,   nil,   nil,   nil,    47,   nil,
    47,    47,   nil,    47,    47,   nil,   nil,   nil,   226,   nil,
   nil,   nil,   nil,   nil,   nil,   226,   228,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   228,   228,   nil,   228,   228,   228,
   228,   228,   228,   228,   nil,   228,   226,   228,   228,   228,
   228,   221,   226,   226,   nil,   nil,   nil,   nil,   221,   nil,
   nil,   226,   226,   nil,   226,   226,   226,   226,   226,   226,
   226,   219,   226,   nil,   226,   226,   226,   226,   219,   221,
   nil,   nil,   nil,   nil,   nil,   221,   221,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   221,   221,   nil,   221,   221,   221,
   221,   221,   221,   221,   195,   221,   219,   221,   221,   221,
   221,   195,   nil,   nil,   219,   219,   nil,   219,   219,   219,
   219,   219,   219,   219,   nil,   219,   nil,   219,   219,   219,
   219,   nil,   nil,   nil,   nil,   nil,   nil,   188,   195,   195,
   nil,   nil,   nil,   nil,   188,   nil,   nil,   195,   195,   188,
   195,   195,   195,   195,   195,   195,   195,   183,   195,   nil,
   195,   195,   195,   195,   183,   188,   nil,   nil,   nil,   nil,
   nil,   188,   188,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   188,   nil,   188,   188,   188,   188,   188,   188,   188,
   177,   188,   183,   188,   188,   188,   188,   177,   nil,   nil,
   183,   183,   nil,   183,   183,   183,   183,   183,   183,   183,
   nil,   183,   nil,   183,   183,   183,   183,   nil,   177,   nil,
   nil,   nil,   151,   nil,   177,   177,   nil,   nil,   nil,   151,
   nil,   nil,   nil,   177,   177,   nil,   177,   177,   177,   177,
   177,   177,   177,   nil,   177,   nil,   177,   177,   177,   177,
   151,   149,   nil,   nil,   nil,   nil,   151,   151,   149,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   151,   nil,   151,   151,
   151,   151,   151,   151,   151,   nil,   151,    58,   151,   151,
   151,   151,   nil,   nil,    58,   nil,   149,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   149,   nil,   149,   149,   149,
   149,   149,   149,   149,    63,   149,   nil,   149,   149,   149,
   149,    63,    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    58,    58,    58,    58,    58,    58,
   nil,    58,   191,    58,    58,    58,    58,   nil,   nil,    63,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    63,    63,   nil,
    63,    63,    63,    63,    63,    63,    63,   nil,    63,   nil,
    63,    63,    63,    63,   191,   191,   nil,   191,   191,   nil,
   nil,   nil,   nil,   191,   191,   191,   191,   191,   191 ]

racc_action_pointer = [
   168,   387,   nil,   -16,   nil,   nil,   nil,   nil,   nil,   nil,
    54,   317,   nil,   291,   282,   295,   nil,   535,   -10,   nil,
   nil,   nil,   nil,    95,   262,   259,   253,   220,   618,   nil,
   nil,   219,   235,   234,   nil,   230,   223,   209,   178,   nil,
   nil,   157,   154,   144,   nil,   172,    -7,   690,   129,   nil,
   nil,   100,    -5,    48,   nil,    76,   -36,   -24,   975,   nil,
   nil,   nil,   nil,  1002,   nil,   nil,   nil,   nil,    34,   nil,
   nil,    64,   nil,    13,    -4,   -16,   360,   301,   nil,   306,
   352,   296,   nil,   nil,    33,   nil,   nil,   nil,   271,   nil,
   nil,   nil,   nil,   292,   298,   nil,   nil,   nil,   nil,   322,
   528,   165,     0,   335,   nil,    37,   nil,   nil,   nil,   nil,
   328,   545,   338,   nil,   321,   313,   259,   316,   nil,   241,
   221,   188,   168,   nil,   nil,   364,   -13,   150,    97,    79,
    59,    26,    92,   nil,    24,    39,   nil,   nil,   nil,    -7,
    96,    98,    -8,   nil,   nil,   nil,   nil,    91,    99,   949,
    86,   920,   313,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   131,   134,   144,   154,   156,   157,   nil,   nil,
   nil,   170,   nil,   nil,   nil,   nil,   nil,   888,   164,   nil,
   nil,   nil,   nil,   855,   165,   173,   149,   174,   835,   146,
   nil,  1034,   183,   161,   nil,   802,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   169,   175,   nil,   nil,   769,
   nil,   749,   195,   225,   -18,   241,   716,   138,   689,   246,
   636,   -29,   598,   565,   -12,   527,   474,   456,   249,   nil,
   nil,   436,   nil,   254,   262,   nil,   nil,   238,   280,   nil,
   nil,   nil,   nil,   252,   403,   279,   350,   383,   274,   330,
   nil,   nil,   nil,   288,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   287,   289,   295,   nil,   nil,   312,   318,
   nil,   nil,   nil,     6,   nil,   nil,   nil ]

racc_action_default = [
  -175,  -175,    -1,  -175,    -4,    -5,    -6,    -7,    -8,    -9,
  -175,   -18,   -30,  -175,   -41,  -175,    -2,    -3,   -52,   -53,
   -55,   -56,   -95,  -175,  -175,   -14,  -175,  -175,  -175,   -42,
   287,  -175,  -175,  -175,   -60,   -62,   -64,   -65,  -175,   -51,
  -165,  -175,  -175,  -175,   -13,  -175,  -175,  -175,   -38,   -39,
   -40,   -44,   -47,  -165,  -122,  -123,  -126,  -129,  -175,  -131,
  -132,  -133,  -134,  -175,  -136,  -137,  -138,  -140,  -175,  -143,
  -144,  -175,  -146,  -175,  -175,  -175,  -175,  -152,  -153,  -157,
  -175,  -175,  -163,  -164,  -175,  -168,  -169,  -170,  -175,  -172,
  -173,  -174,   -57,  -175,  -175,   -61,   -63,   -66,   -50,   -10,
   -11,   -12,   -15,   -19,   -21,   -26,   -23,   -24,   -25,   -31,
  -175,  -175,  -175,   -37,   -72,  -175,  -175,  -175,   -46,  -175,
  -175,  -175,  -175,  -130,  -139,  -175,  -175,  -175,  -175,  -175,
  -175,  -175,  -155,  -156,  -175,  -175,  -167,  -171,   -58,  -175,
  -175,  -175,  -175,   -22,   -27,   -28,   -32,  -175,   -35,  -175,
   -74,  -175,   -49,   -43,   -45,  -124,  -125,  -127,  -128,  -135,
  -141,  -142,  -175,  -175,  -175,  -175,  -175,  -175,  -154,  -158,
  -160,  -175,  -162,  -166,   -59,   -67,   -68,  -175,  -175,   -16,
   -17,   -20,   -33,  -175,  -175,   -89,   -79,  -175,  -175,   -73,
   -81,  -175,  -175,   -98,  -100,  -175,  -103,  -104,  -105,  -107,
  -108,  -109,  -110,  -111,  -112,  -119,  -120,  -121,  -145,  -147,
  -148,  -149,  -150,  -151,  -161,   -69,  -175,   -34,   -36,  -175,
   -48,  -175,  -175,  -175,  -175,  -121,  -175,  -175,  -175,  -175,
  -175,  -175,  -175,  -175,  -175,  -175,  -175,  -175,  -175,   -54,
   -94,  -175,  -102,  -175,   -71,   -97,   -88,   -80,   -75,   -77,
   -78,   -29,  -106,   -99,  -175,  -175,  -175,  -175,  -175,  -175,
   -85,   -86,   -91,  -175,   -93,  -113,  -114,  -115,  -116,  -117,
  -118,  -101,   -70,  -175,  -175,  -175,   -84,   -90,  -175,  -175,
   -92,   -96,   -76,  -175,   -83,   -87,   -82 ]

racc_goto_table = [
    39,    52,    18,   184,   147,    17,    50,   124,   249,   106,
   104,   189,   109,   260,   239,     5,    11,   176,    16,    11,
    98,   157,   158,   155,   156,   243,    18,   244,   248,    47,
    92,   253,   271,   242,   118,   171,   125,   215,   123,   276,
    18,    18,    18,    99,   100,   101,   169,   170,   224,   174,
     2,   239,     3,     4,     6,    25,    44,   258,   103,   262,
   282,   265,   266,   267,   268,   269,   270,   143,   124,   124,
   124,   124,   110,   246,    28,   146,   217,   239,    48,   113,
   114,   247,   150,   275,   148,   277,   186,   220,   240,    52,
     1,   175,   138,    18,   153,   nil,   139,   nil,   nil,   154,
   163,   164,   165,   166,   167,   106,   181,   284,   160,   nil,
   nil,   nil,   286,   279,    18,   nil,   nil,   152,   nil,   nil,
   nil,   nil,   185,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   148,   nil,   nil,   nil,
   nil,   225,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   250,   nil,   nil,   nil,   nil,
   nil,   nil,   185,   nil,   nil,   nil,   nil,   nil,   245,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   125,   nil,   185,   nil,   nil,   nil,   nil,   250,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   281 ]

racc_goto_check = [
    28,    21,    33,    22,    20,     5,    26,    63,    46,    15,
    12,    42,    18,    51,    16,     4,     8,    41,     4,     8,
    28,    64,    64,    62,    62,    43,    33,    44,    45,     5,
    33,    55,    56,    57,    28,    66,    21,    42,    67,    51,
    33,    33,    33,     5,     5,     5,    78,    79,    42,    39,
     2,    16,     3,     6,     7,     9,    10,    49,    11,    49,
    46,    49,    49,    49,    49,    49,    49,    14,    63,    63,
    63,    63,    19,    22,    23,    18,    20,    16,    24,    25,
    29,    42,    30,    49,    21,    49,    31,    32,    35,    21,
     1,    40,    33,    33,    26,   nil,     5,   nil,   nil,    28,
    21,    21,    21,    21,    21,    15,    12,    49,    28,   nil,
   nil,   nil,    49,    22,    33,   nil,   nil,     5,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    15,   nil,   nil,   nil,   nil,
   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,    28,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21,   nil,    21,   nil,   nil,   nil,   nil,    15,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    28 ]

racc_goto_pointer = [
   nil,    90,    50,    52,    15,     2,    53,    54,    16,    44,
    31,    12,   -36,   nil,   -38,   -37,  -178,   nil,   -35,    25,
  -107,   -27,  -146,    60,    50,    31,   -22,   nil,   -18,    32,
   -32,   -64,   -99,    -1,   nil,  -104,   nil,   nil,   nil,   -90,
   -48,  -122,  -140,  -191,  -189,  -194,  -214,   nil,   nil,  -171,
   nil,  -216,   nil,   nil,   nil,  -195,  -209,  -162,   nil,   nil,
   nil,   nil,   -96,   -51,  -100,   nil,   -99,   -20,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -88,   -87,
   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   223,   nil,
   nil,   nil,   nil,   105,   nil,    61,   190,    12,   nil,   nil,
   nil,   207,   nil,   nil,   nil,   nil,   nil,    51,    69,   nil,
   nil,   nil,   nil,    70,    19,   261,    20,    21,    33,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   206,   200,   191,
   201,   nil,   202,   203,   204,   193,   194,   196,   197,   198,
   199,   205,    54,    55,    56,    57,    58,    59,    60,    62,
    64,    65,    66,    68,    72,    77,    78,    81,   nil,   nil,
    85,    86,    87 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 73, :_reduce_none,
  2, 74, :_reduce_2,
  2, 74, :_reduce_3,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  4, 78, :_reduce_10,
  4, 78, :_reduce_11,
  4, 78, :_reduce_12,
  3, 76, :_reduce_13,
  0, 82, :_reduce_none,
  2, 82, :_reduce_15,
  4, 82, :_reduce_16,
  4, 82, :_reduce_17,
  0, 81, :_reduce_none,
  3, 81, :_reduce_19,
  3, 83, :_reduce_20,
  1, 83, :_reduce_none,
  2, 84, :_reduce_22,
  1, 85, :_reduce_none,
  1, 85, :_reduce_24,
  1, 85, :_reduce_25,
  0, 86, :_reduce_26,
  1, 86, :_reduce_27,
  1, 86, :_reduce_28,
  3, 88, :_reduce_29,
  1, 80, :_reduce_none,
  4, 79, :_reduce_31,
  5, 79, :_reduce_32,
  3, 91, :_reduce_33,
  3, 92, :_reduce_34,
  1, 92, :_reduce_none,
  4, 90, :_reduce_36,
  4, 89, :_reduce_37,
  3, 89, :_reduce_38,
  1, 96, :_reduce_39,
  1, 96, :_reduce_40,
  0, 95, :_reduce_none,
  1, 95, :_reduce_42,
  3, 98, :_reduce_43,
  1, 98, :_reduce_none,
  3, 99, :_reduce_45,
  2, 99, :_reduce_46,
  1, 99, :_reduce_none,
  4, 97, :_reduce_48,
  2, 101, :_reduce_49,
  3, 77, :_reduce_50,
  2, 77, :_reduce_51,
  1, 77, :_reduce_none,
  1, 77, :_reduce_none,
  1, 107, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  3, 108, :_reduce_57,
  4, 108, :_reduce_58,
  5, 109, :_reduce_59,
  1, 110, :_reduce_60,
  2, 110, :_reduce_61,
  1, 110, :_reduce_62,
  2, 110, :_reduce_63,
  1, 110, :_reduce_64,
  1, 110, :_reduce_65,
  2, 110, :_reduce_66,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  2, 112, :_reduce_69,
  4, 113, :_reduce_70,
  1, 115, :_reduce_none,
  0, 102, :_reduce_none,
  2, 102, :_reduce_73,
  0, 103, :_reduce_none,
  3, 103, :_reduce_75,
  3, 117, :_reduce_76,
  1, 117, :_reduce_none,
  1, 118, :_reduce_none,
  0, 104, :_reduce_none,
  2, 104, :_reduce_80,
  1, 119, :_reduce_none,
  6, 120, :_reduce_82,
  5, 120, :_reduce_83,
  4, 122, :_reduce_84,
  3, 122, :_reduce_85,
  1, 123, :_reduce_none,
  3, 123, :_reduce_87,
  3, 94, :_reduce_88,
  1, 94, :_reduce_none,
  4, 124, :_reduce_90,
  3, 124, :_reduce_91,
  4, 125, :_reduce_92,
  3, 125, :_reduce_93,
  2, 126, :_reduce_94,
  1, 105, :_reduce_95,
  3, 116, :_reduce_96,
  1, 116, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_99,
  1, 127, :_reduce_none,
  3, 127, :_reduce_101,
  2, 128, :_reduce_102,
  1, 128, :_reduce_none,
  1, 129, :_reduce_none,
  1, 130, :_reduce_none,
  3, 130, :_reduce_106,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  1, 131, :_reduce_none,
  3, 132, :_reduce_113,
  3, 132, :_reduce_114,
  3, 132, :_reduce_115,
  3, 132, :_reduce_116,
  3, 132, :_reduce_117,
  3, 132, :_reduce_118,
  1, 121, :_reduce_none,
  1, 121, :_reduce_none,
  1, 133, :_reduce_none,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  3, 134, :_reduce_124,
  3, 134, :_reduce_125,
  1, 134, :_reduce_none,
  3, 136, :_reduce_127,
  3, 136, :_reduce_128,
  1, 136, :_reduce_none,
  2, 137, :_reduce_130,
  1, 137, :_reduce_none,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  1, 139, :_reduce_none,
  3, 139, :_reduce_135,
  1, 140, :_reduce_none,
  1, 140, :_reduce_none,
  1, 142, :_reduce_none,
  1, 142, :_reduce_none,
  1, 143, :_reduce_140,
  3, 87, :_reduce_141,
  3, 87, :_reduce_142,
  1, 87, :_reduce_none,
  1, 145, :_reduce_none,
  4, 141, :_reduce_145,
  1, 141, :_reduce_none,
  4, 146, :_reduce_147,
  4, 146, :_reduce_148,
  4, 146, :_reduce_149,
  4, 146, :_reduce_150,
  4, 146, :_reduce_151,
  1, 144, :_reduce_none,
  1, 144, :_reduce_none,
  3, 147, :_reduce_154,
  2, 147, :_reduce_155,
  2, 147, :_reduce_156,
  1, 147, :_reduce_157,
  3, 148, :_reduce_158,
  1, 149, :_reduce_none,
  1, 150, :_reduce_none,
  2, 151, :_reduce_161,
  1, 151, :_reduce_162,
  1, 138, :_reduce_163,
  1, 138, :_reduce_164,
  1, 100, :_reduce_165,
  3, 135, :_reduce_166,
  2, 135, :_reduce_167,
  1, 135, :_reduce_none,
  1, 135, :_reduce_none,
  1, 152, :_reduce_none,
  2, 154, :_reduce_171,
  1, 154, :_reduce_172,
  1, 153, :_reduce_173,
  1, 153, :_reduce_174 ]

racc_reduce_n = 175

racc_shift_n = 287

racc_token_table = {
  false => 0,
  :error => 1,
  :EXPLAIN => 2,
  :DESCRIBE => 3,
  :DESC => 4,
  :SHOW => 5,
  :INDEX => 6,
  :FROM => 7,
  :IN => 8,
  :CREATE => 9,
  :TABLE => 10,
  :LIMIT => 11,
  :unsigned_integer => 12,
  :comma => 13,
  :OFFSET => 14,
  :ORDER => 15,
  :BY => 16,
  :built_in_function => 17,
  :ASC => 18,
  :left_paren => 19,
  :right_paren => 20,
  :INSERT => 21,
  :INTO => 22,
  :VALUES => 23,
  :SELECT => 24,
  :asterisk => 25,
  :DISTINCT => 26,
  :AS => 27,
  :CROSS => 28,
  :JOIN => 29,
  :INNER => 30,
  :LEFT => 31,
  :OUTER => 32,
  :RIGHT => 33,
  :FULL => 34,
  :ON => 35,
  :USING => 36,
  :WHERE => 37,
  :GROUP => 38,
  :HAVING => 39,
  :NOT => 40,
  :BETWEEN => 41,
  :AND => 42,
  :LIKE => 43,
  :IS => 44,
  :NULL => 45,
  :EXISTS => 46,
  :identifier => 47,
  :OR => 48,
  :equals_operator => 49,
  :not_equals_operator => 50,
  :less_than_operator => 51,
  :greater_than_operator => 52,
  :less_than_or_equals_operator => 53,
  :greater_than_or_equals_operator => 54,
  :plus_sign => 55,
  :minus_sign => 56,
  :solidus => 57,
  :CURRENT_USER => 58,
  :period => 59,
  :COUNT => 60,
  :AVG => 61,
  :MAX => 62,
  :MIN => 63,
  :SUM => 64,
  :E => 65,
  :quote => 66,
  :character_string_literal => 67,
  :DATE => 68,
  :date_string => 69,
  :TRUE => 70,
  :FALSE => 71 }

racc_nt_base = 72

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "EXPLAIN",
  "DESCRIBE",
  "DESC",
  "SHOW",
  "INDEX",
  "FROM",
  "IN",
  "CREATE",
  "TABLE",
  "LIMIT",
  "unsigned_integer",
  "comma",
  "OFFSET",
  "ORDER",
  "BY",
  "built_in_function",
  "ASC",
  "left_paren",
  "right_paren",
  "INSERT",
  "INTO",
  "VALUES",
  "SELECT",
  "asterisk",
  "DISTINCT",
  "AS",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "HAVING",
  "NOT",
  "BETWEEN",
  "AND",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "CURRENT_USER",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "TRUE",
  "FALSE",
  "$start",
  "direct_sql_statement",
  "direct_sql_data_statement",
  "explain",
  "direct_select_statement_multiple_rows",
  "table_reference",
  "show_statement",
  "insert_specification",
  "query_expression",
  "order_by_clause",
  "limit_clause",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "column_reference",
  "subquery",
  "query_specification",
  "value_list",
  "column_list",
  "in_column_list",
  "value_expression",
  "in_value_list",
  "select_modifier",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "column_name",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "general_value_specification",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "bool_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 9)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Explain.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Explain.new(val[1]) 
    result
  end
.,.,

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::ShowIndex.new(val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::ShowIndex.new(val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 24)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::ShowCreateTable.new(val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::DirectSelect.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::Limit.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::Limit.new(val[3], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_17(val, _values, result)
     result = SQLParser::Statement::Limit.new(val[1], val[3]) 
    result
  end
.,.,

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.racc', 39)
  def _reduce_19(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 42)
  def _reduce_20(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_22(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 23 omitted

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::BuiltInFunction.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 61)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], nil, val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 68)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::Insert.new(val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 71)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::InColumnList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_34(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 82)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 85)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 86)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

# reduce 41 omitted

module_eval(<<'.,.,', 'parser.racc', 90)
  def _reduce_42(val, _values, result)
     result = SQLParser::Statement::Distinct.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_43(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 97)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_48(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 105)
  def _reduce_49(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_59(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 128)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 131)
  def _reduce_63(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 133)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 134)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 67 omitted

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_76(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 166)
  def _reduce_80(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_82(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 174)
  def _reduce_83(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 177)
  def _reduce_84(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 178)
  def _reduce_85(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_88(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 192)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 193)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 196)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 197)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_95(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_96(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 213)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 220)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 103 omitted

# reduce 104 omitted

# reduce 105 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_106(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_115(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 244)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

module_eval(<<'.,.,', 'parser.racc', 258)
  def _reduce_124(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 129 omitted

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_130(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_135(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::CurrentUser.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 290)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 143 omitted

# reduce 144 omitted

module_eval(<<'.,.,', 'parser.racc', 297)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 146 omitted

module_eval(<<'.,.,', 'parser.racc', 301)
  def _reduce_147(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 302)
  def _reduce_148(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 303)
  def _reduce_149(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 304)
  def _reduce_150(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 305)
  def _reduce_151(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 152 omitted

# reduce 153 omitted

module_eval(<<'.,.,', 'parser.racc', 313)
  def _reduce_154(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 314)
  def _reduce_155(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 315)
  def _reduce_156(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 316)
  def _reduce_157(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 319)
  def _reduce_158(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 159 omitted

# reduce 160 omitted

module_eval(<<'.,.,', 'parser.racc', 328)
  def _reduce_161(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 329)
  def _reduce_162(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 332)
  def _reduce_163(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 333)
  def _reduce_164(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 337)
  def _reduce_165(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 341)
  def _reduce_166(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 342)
  def _reduce_167(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

module_eval(<<'.,.,', 'parser.racc', 350)
  def _reduce_171(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 351)
  def _reduce_172(val, _values, result)
     result = SQLParser::Statement::Date.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 354)
  def _reduce_173(val, _values, result)
     result = SQLParser::Statement::Bool.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 355)
  def _reduce_174(val, _values, result)
     result = SQLParser::Statement::Bool.new(val[0]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
